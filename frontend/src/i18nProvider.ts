//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';

const enResources = {
  resources: {
    Login: {
      name: 'Login',
      fields: { email: 'Email', password: 'Password', id: 'id' },
    },
    Users: {
      name: 'Users',
      fields: {
        name: 'Name',
        surname: 'Surname',
        phoneNumber: 'Phone Number',
        alternativeNumber: 'Alternative Number',
        address: 'Address',
        age: 'Age',
        sex: 'Sex',
        id: 'id',
      },
    },
    Emergencies: {
      name: 'Emergencies',
      fields: {
        typeOfEmergency: 'Type Of Emergency',
        location: 'Location',
        ETA: 'Eta',
        time: 'Time',
        userName: 'User Name',
        surname: 'Surname',
        mobileNumber: 'Mobile Number',
        id: 'id',
      },
    },
    MedicalHistories: {
      name: 'Medical Histories',
      fields: {
        medicalConditions: 'Medical Conditions',
        medicalHistory: 'Medical History',
        allergies: 'Allergies',
        medication: 'Medication',
        bloodType: 'Blood Type',
        chronicalDisease: 'Chronical Disease',
        age: 'Age',
        alternativeNumbers: 'Alternative Numbers',
        familyMembers: 'Family Members',
        nextOfKin: 'Next Of Kin',
        medicalAid: 'Medical Aid',
        id: 'id',
      },
    },
    Notifications: {
      name: 'Notifications',
      fields: {
        notificationType: 'Notification Type',
        messageContent: 'Message Content',
        timeSent: 'Time Sent',
        associatedWith: 'Associated With',
        id: 'id',
      },
    },
  },
};
const frResources = {
  resources: {
    Login: {
      name: 'Login (fr)',
      fields: { email: 'Email (fr)', password: 'Password (fr)', id: 'id' },
    },
    Users: {
      name: 'Users (fr)',
      fields: {
        name: 'Name (fr)',
        surname: 'Surname (fr)',
        phoneNumber: 'Phone Number (fr)',
        alternativeNumber: 'Alternative Number (fr)',
        address: 'Address (fr)',
        age: 'Age (fr)',
        sex: 'Sex (fr)',
        id: 'id',
      },
    },
    Emergencies: {
      name: 'Emergencies (fr)',
      fields: {
        typeOfEmergency: 'Type Of Emergency (fr)',
        location: 'Location (fr)',
        ETA: 'Eta (fr)',
        time: 'Time (fr)',
        userName: 'User Name (fr)',
        surname: 'Surname (fr)',
        mobileNumber: 'Mobile Number (fr)',
        id: 'id',
      },
    },
    MedicalHistories: {
      name: 'Medical Histories (fr)',
      fields: {
        medicalConditions: 'Medical Conditions (fr)',
        medicalHistory: 'Medical History (fr)',
        allergies: 'Allergies (fr)',
        medication: 'Medication (fr)',
        bloodType: 'Blood Type (fr)',
        chronicalDisease: 'Chronical Disease (fr)',
        age: 'Age (fr)',
        alternativeNumbers: 'Alternative Numbers (fr)',
        familyMembers: 'Family Members (fr)',
        nextOfKin: 'Next Of Kin (fr)',
        medicalAid: 'Medical Aid (fr)',
        id: 'id',
      },
    },
    Notifications: {
      name: 'Notifications (fr)',
      fields: {
        notificationType: 'Notification Type (fr)',
        messageContent: 'Message Content (fr)',
        timeSent: 'Time Sent (fr)',
        associatedWith: 'Associated With (fr)',
        id: 'id',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);

const translations = { en, fr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Fran√ßais' },
  ],
);
